课程进度：第19节结束

一、组件摆放方式：
    1、pack()方式 ： 方向、方位摆放方法  top bottom left right
                    参数：side = 'top'或'bottom'或'left'或'right'
                         ipadx、ipday 扩展组件内部边距
                         pdax、pady   扩展组件间间距
                         fill         沾满整行（x）或整列(y 只适用 left right )或both(结合expand使用)
                         expand       设置side是否有效（yes 失效）

      示例：tkinter_02.py


    2、grid()方式 ： 网格摆放方法       左上角为0,0  行列 适合网格结构
                    参数：row         设置行数 默认为0
                         column      设置列数 默认为0
                         rowspan     设置跨行数量
                         columnspan  设置跨列数量
                         ipadx
                         ipady

       示例：tkinter_03.py

    3、place()方式： 定位摆放方式       左上角为0,0  距离 适合拖放结构
                    绝对定位布局(单位：像素)： x  y
                                width   设置组件占据的宽度
                                height  设置组件占据的高度

                    相对定位布局(取值0~1之间)： relx  rely
                                relwidth   设置组件占据界面的宽度百分比
                                relheight  设置组件占据界面的高度百分比

       示例：tkinter_04.py


二、基本属性介绍：
        禁止同时使用两种布局

三、弹出对话框：需要单独导入模块
    1、消息对话框：     messagebox   显示信息

    2、简单信息对话框：  simpledialog 收集消息
                        .askstring  获取字符串
                        .askinteger 获取整型
                        .askfloat   获取浮点型

    3、文件对话框：     filedialog   获取文件或文件夹相关信息

    4、颜色选取对话框：  colorchooser

四、事件绑定
    1、事件绑定函数：
       以按钮为例：1、为按钮添加“点击时候”的操作———》事件类型
              2、使用按钮的’command'参数指定类函数————》事件绑定函数
              3、按钮操作过程中的信息————》事件对象

       事件绑定函数：1、 组件.bind（‘事件类型’，事件函数）
                    为一个组件绑定一个操作
                   2、 组件.bind_class（‘组件类型’，‘事件类型’，事件函数）
                    为一类组件绑定一个操作
                    组件类型就是创建组件的方法名，例如：按钮组件 Button
                   3、 组件.bind_all（‘事件类型’，事件函数）
                    为所有组件绑定一个操作（所有操作都会当做对主界面的操作）

    2、事件类型：
        1）、鼠标事件类型
        2）、键盘事件类型
        3）、窗口和组件相关事件类型

    3、事件对象

    注意：1、通过绑定函数操作，对应的事件函数，必须有形参接受事件对象
         2、事件函数必须在绑定之前定义
